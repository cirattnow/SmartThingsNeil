install:
- gem install braid
- gem install hub
script: "./import-external-changes.sh"
env:
  global:
  - secure: VtOCHpn4uz7z65HdDj77fsLmjAFO9qJlHJiwqaFUEomBsoHAl8oVimfZ9PtnE+WNvdty2PLwsznObP4rNt5t4t4bJ6e0MitVCru8/gm8OX35zn54as+ljabS/Ychs+FmXLYrWDpLc0y72bAjcfxYm5E1ZytuPbaYFFYQ4VHEMSNF7im/gr/P8y5IB0Fnw23fNWRdM+EWaj3Y2m1IdrgwULwCDyNUPowFm5eDgsTlAwl0neAjZLNthe5n3efomRXYyUNfxBT4ATH8hEYetO1mxQLKSwNdhpVG4/WRtd2wBmOcWQ8QDPWBt/50VSy/1z61vzILp8o4ut+AkaPSL0EMv3dB1FTNRQpzhTI7flpKCeFQX7mBy8ReRnyEqs1wl8uq/lROe8DcKeu9YPI2Smnr408BrlTvw+RI1CKgPaYNXgZP2ww9ZsFj8ui8w5gyaJstmHhCzNuAVCYWuVRvnokgOPxenT7zLNAGh/x4l8NEWF9MvUuefjagDymQIyRm8UrLbthJz+0nkCLqMd9vxYepIvABLREIrZTqy4vSOoUGKX1p2ctZMmhyrG8ZomvcR40iHNt+exCaHt+hhV9nN/dysoNqBm6c8roIgmi5G77LUDwIjdUOhxzQeSPbQwdC6243ys+JxynsfJedE7evogpFB9N5KPv9HnZuqnomxD2sAGw=
  - secure: G3v31L6EhaqUFPnAoavyW0/W1ovjHTJFch4rwHcOVygaINjDS8bIZOnYdES9XYfxbyM/nGfbWQ4yg2D//aPvKv2szHssylfbFBVdVgS7SRmq08vTRHTMEatcJe5kDk54P2XtKIMDEp5MV7g1AlYZP9OwvtfOE6yndldqaGq7uHzp3uGb63Eyte7euywaN98wq++CE+WR99INDCl7oS+lGcZQML54AX7tVdvmE5uG9gM0/PQ/Jv8ItjwticQZzeK50O6IyAWb/Sw/KLGY6y+3zvngjqgidd6W4YXWAcyxfDWd415SCkDsbeMx4YomDOiE4L+7ti1qD68lFkflp+VFgUu1Db/t31ct7CPDqmxlr+NlB7kXwSjj2IwrkV/JuZxhE9BxzQBRYYPEhfYEX1iE4xbHjkwSB+77ILSBHfbOz7UpbM6pm1jAPxbpTBlI1H1Wxt8At3fGuqEVeWF5QSG5x+pt+afWrMr11ZAto8U+QYBW/k/dbdCMtbF9ERgRqar1d9tMj2+RpQu+Ze6qBlFiFuNYGaAgIJ6WM5tPlOpp9bCiFEOOm1QFX9Vly8PZlNDRefyvoFtzLju6gpsQxj/o52vzTlxngoQFdz4fx8Pwn6UHbNXHxtGBTIcXqCmD4PtKku7JELAbDflgJh71NIWbz/oJ7isdkeb4laTEgOflS9g=
branches:
  only:
  - master

# The above 'secure' field contains the cyphertext that resulted from encrypting the string "GITHUB_TOKEN=x", where x is a github personal token, which 
# I generated in the github web interface (https://github.com/settings/tokens).  	The encryption was performed by me, on my own computer,
# using the travis command-line utility (which I installed by running "gem install travis"); the command to generate the above cyphertext and
# add it to this .travis.yml file was  "travis encrypt GITHUB_TOKEN=x --add env.global", where, once again,
# I have cleverly substituted 'x' for the actual token, which only I know (or so github tells me) (and I have since forgotten the original token anyway, 
# so don't bother asking me for it).
# The 'travis encrypt' command looks up online the publicly available public member of the public-private key pair that Travis has generated just for this particular 
# git repository.  Travis keeps the private member of that pair secret (or so they tell me).  By encrypting the plain text with the public member of the pair,
# I am assured that the only person who can succesfully recover the plaintext is the person who knows the secret private member of the pair (which is Travis). 
# (Or so my math professor tells me, and the NSA is quick to agree.)
# Travis could, if it were so inclined, download the above cyphertext from my publicly available public github repository, and then decrypt it
# with its private key, and then publish the plaintext in a full page ad in the New York Times, along with a message inviting any and all arbitrary yahoos to push 
# to my public github repositories (until I figured out what was happening and disabled that github personal token).  However, Travis knows 
# that if they violate my trust in such a manner, I will be inclined to take my business elsewhere; Travis will have to say goodbye to my 
# substantial monthly payment.  Oh, wait, I just remembered - I don't pay Travis anything because I have  a free account. Let me rethink this...

# My security here relies not only on Travis to keep their private member of the key pair (and the plaintext that they can decrypt using that key) a secret, but 
# also - and this is the more likely weak link - on me not to accidentally run some command as part of the travis build process that writes the plaintext to
# stdout, where it will be logged and made publicly avilable by Travis in the console transcript for the build.

# The github personal access token acts like an alternate password for my github account, which is used along with my normal github username.
# github allows me to revoke this alternate password at will, and also to limit the permissions that a user who has logged in with the 
# alternate password may have.  It would be nice to be able to restrict the repositories that the alternate-password form of the credentials
# were allowed to touch, but I have not found anything in the github settings pages indicating that this is possible; it looks like the alternate-password 
# form of the credentials has the same permissions for all of my github repositories.  

